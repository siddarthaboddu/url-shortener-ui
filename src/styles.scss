/* You can add global styles to this file, and also import other style files */

@import "~angular-notifier/styles";
@import "~@fortawesome/fontawesome-free/css/all.min.css";

@import '~@angular/material/theming';
@include mat-core();

html,
body {
    height: 100%;
    // background-color: #374046;
}

body {
    margin: 0;
    font-family: Roboto, "Helvetica Neue", sans-serif;
    // background-color: #374046 !important;
}


@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();



// custom background and foreground palettes
$my-dark-theme-background: (
  status-bar: green,
  app-bar:    map_get($mat-blue, 900),
  background: #374046,
  hover:      rgba(white, 0.04), 
  card:       #4d5961,
  dialog:     #4d5961,
  disabled-button: $white-12-opacity,
  raised-button: map-get($mat-grey, 800),
  focused-button: $white-6-opacity,
  selected-button: map_get($mat-grey, 900),
  selected-disabled-button: map_get($mat-grey, 800),
  disabled-button-toggle: black,
  unselected-chip: map_get($mat-grey, 700),
  disabled-list-option: black,
);

$my-dark-theme-foreground: (
  base:              white,
  divider:           $white-12-opacity,
  dividers:          $white-12-opacity,
  disabled:          rgba(white, 0.3),
  disabled-button:   rgba(white, 0.3),
  disabled-text:     rgba(white, 0.3),
  hint-text:         rgba(white, 0.3),
  secondary-text:    rgba(white, 0.7),
  icon:              white,
  icons:             white,
  text:              white,
  slider-min:        white,
  slider-off:        rgba(white, 0.3),
  slider-off-active: rgba(white, 0.3),
);


@function create-wonky-theme($primary, $accent, $warn: mat-palette($mat-red)) {
    @return (
      primary: $primary,
      accent: $accent,
      warn: $warn,
      is-dark: false,
      foreground: $my-dark-theme-foreground,
      background: $my-dark-theme-background,
    );
  }


  // The rest of this is like a normal theme.scss file. The only difference being that we use create-wonky-theme instead of mat-light-theme
$custom-theme-primary: mat-palette($mat-blue, 800, 500, 900);
$custom-theme-accent: mat-palette($mat-cyan, 800, 500, 900);
$custom-theme-warn: mat-palette($mat-red);

$custom-theme: create-wonky-theme($custom-theme-primary, $custom-theme-accent, $custom-theme-warn);

@include angular-material-theme($custom-theme);

// // Define the palettes for your theme using the Material Design palettes available in palette.scss
// // (imported above). For each palette, you can optionally specify a default, lighter, and darker
// // hue. Available color palettes: https://material.io/design/color/
// $candy-app-primary: mat-palette($mat-blue, 800, 500, 900);
// $candy-app-accent:  mat-palette($mat-cyan, 800, 500, 900);

// // The warn palette is optional (defaults to red).
// $candy-app-warn:    mat-palette($mat-red);

// // Create the theme object (a Sass map containing all of the palettes).
// $candy-app-theme: mat-light-theme($candy-app-primary, $candy-app-accent, $candy-app-warn);

// // Include theme styles for core and each component used in your app.
// // Alternatively, you can import and @include the theme mixins for each component
// // that you are using.
// @include angular-material-theme($candy-app-theme);

.advanced-pie-legend {
  width: 15rem !important;
}